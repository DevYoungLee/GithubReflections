It is useful to use the FC command on Windows or the Diff command on mac/linux because it would save alot of time when comparing two files. 
Having access to the entire history of a file can make me a more efficient programmer by being able to easily compare nonworking versions with working versions to find bugs.
Manually choosing when to create a commit is advantageous because it allows the programmer to decide when it is a good time to commit. However, this also relies on the programmer to make routine, good-decisioned commits. It would be more useful to have automatic saves rather than zero saves.
Version control systems, like Git, allow saving multiple files in one commit because a change in a programming project may require a change in multiple files. However, other version control systems, like Google Docs, treat each file separately because it is highly unlikely that a change in one file will require a change in another. In other words, programming projects require many files working together.
You can use git log to view all the previous commits of a repository. You can use get diff to compare two specific commits of a repository.
When making a change that might break something, it is important to use version control so that I can always revert the change if something unexpected happens so I do not have to spend time and effort redoing the change.
When working on a project, I want to try to use Git to commit whenever I make a single logical change. Also, when bugs happen, I can use git log and git diff to find which commit introduced the bug. Finally, git commits will allow me to make changes to my projects without worrying about how the change might break my project. Very useful!