You might want to use a remote repository rather than keeping it local if you are collaborating on a project and want your code to be shared or reviewed. Also it is an easy way to make sure your code gets saved in a cloud in case something goes wrong with your computer.
You might want to pull changes manually rather than Git automatically staying up-to-date with your remote repository because there may be commits in the remote that you do not want, need, or may interfere with the local repository.
A branch is used when you when you create a separate branch for a commit. It is useful when trying experimental features, or adding a separate version without worrying about how this may affect the master branch. A clone is used when you want to copy someone else's repository on GitHub onto your local repository
The benefit of having a copy of the last known state of the remote stored locally is that you can make changes to it without affecting the repository on GitHub. Also, being locally stores, you can update make changes offline. Finally, having a version stores locally allows you a check before pushing any changes to the origin in case there are are conflicts. Further, this allows you to use git diff to see any changes that you have made compared to the origin/master.
GitHub is a platform designed for collaboration for users using Git. It is hard to imagine how collaboration would be easier without GitHub. GitHub allows users to clone existing repositories, update them locally, then push to see if the change requires any fixes or actually works. The only way collaboration would be easier without GitHub would be if there was a strict timeline and you had to update the master code without waiting for approval from the repository owner. But this can be overcome by allowing collaboration with your coworkers. GitHub is very useful!
You would want to make changes in a separate branch rather than directly in master anytime you would want feedback before having the change be merged onto master. I think of master as perfect-quality code so anytime something needs to be added or removed to master, it is always safer to make this change in a separate branch then merge once the change is checked to be correct and proper. The only downside to this is that it will make it a slower process to make change to the master.